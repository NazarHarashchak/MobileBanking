{"ast":null,"code":"var ROOT = \"https://localhost:44331\";\nconst standartHeaders = {\n  Accept: \"application/json\",\n  \"Content-Type\": \"application/json\",\n  Authorization: \"Bearer \" + sessionStorage.tokenKey,\n  \"Access-Control-Allow-Origin\": \"*\"\n};\nexport const requests = {\n  doPost: async function (path, data) {\n    const response = await fetch(ROOT + path, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: data.values === undefined ? standartHeaders : {\n        Accept: \"application/json\",\n        Authorization: \" \" + sessionStorage.tokenKey\n      },\n      body: JSON.stringify(data)\n    });\n    return response.json();\n  },\n  doGet: async function (path) {\n    const response = await fetch(ROOT + path, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: standartHeaders\n    }).then(resp => resp.json());\n    return response;\n  },\n  doPut: async function (path, body) {\n    const response = await fetch(ROOT + path, {\n      method: \"PUT\",\n      mode: \"cors\",\n      headers: body.values === undefined ? standartHeaders : {\n        Accept: \"application/json\",\n        Authorization: \" \" + sessionStorage.tokenKey\n      },\n      body: JSON.stringify(body)\n    });\n    return response.json();\n  },\n  doDelete: async function (path) {\n    const response = await fetch(ROOT + path, {\n      method: \"DELETE\",\n      mode: \"cors\",\n      headers: standartHeaders\n    });\n    return response.json();\n  }\n};","map":{"version":3,"sources":["C:/Users/nharash/source/repos/FrontEnd/src/connectingServices/connectingMethods.js"],"names":["ROOT","standartHeaders","Accept","Authorization","sessionStorage","tokenKey","requests","doPost","path","data","response","fetch","method","mode","headers","values","undefined","body","JSON","stringify","json","doGet","then","resp","doPut","doDelete"],"mappings":"AAAA,IAAIA,IAAI,GAAG,yBAAX;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,MAAM,EAAE,kBADc;AAEtB,kBAAgB,kBAFM;AAGtBC,EAAAA,aAAa,EAAE,YAAYC,cAAc,CAACC,QAHpB;AAItB,iCAA+B;AAJT,CAAxB;AAOA,OAAO,MAAMC,QAAQ,GAAG;AACtBC,EAAAA,MAAM,EAAE,gBAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AAClC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACX,IAAI,GAAGQ,IAAR,EAAc;AACxCI,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,IAAI,EAAE,MAFkC;AAGxCC,MAAAA,OAAO,EACLL,IAAI,CAACM,MAAL,KAAgBC,SAAhB,GACIf,eADJ,GAEI;AACAC,QAAAA,MAAM,EAAE,kBADR;AAEAC,QAAAA,aAAa,EAAE,MAAMC,cAAc,CAACC;AAFpC,OANkC;AAUxCY,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf;AAVkC,KAAd,CAA5B;AAYA,WAAOC,QAAQ,CAACU,IAAT,EAAP;AACD,GAfqB;AAiBtBC,EAAAA,KAAK,EAAE,gBAAgBb,IAAhB,EAAsB;AAC3B,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAACX,IAAI,GAAGQ,IAAR,EAAc;AACxCI,MAAAA,MAAM,EAAE,KADgC;AAExCC,MAAAA,IAAI,EAAE,MAFkC;AAGxCC,MAAAA,OAAO,EAAEb;AAH+B,KAAd,CAAL,CAIpBqB,IAJoB,CAIfC,IAAI,IAAIA,IAAI,CAACH,IAAL,EAJO,CAAvB;AAKA,WAAOV,QAAP;AACD,GAxBqB;AA0BtBc,EAAAA,KAAK,EAAE,gBAAgBhB,IAAhB,EAAsBS,IAAtB,EAA4B;AACjC,UAAMP,QAAQ,GAAG,MAAMC,KAAK,CAACX,IAAI,GAAGQ,IAAR,EAAc;AACxCI,MAAAA,MAAM,EAAE,KADgC;AAExCC,MAAAA,IAAI,EAAE,MAFkC;AAGxCC,MAAAA,OAAO,EACLG,IAAI,CAACF,MAAL,KAAgBC,SAAhB,GACIf,eADJ,GAEI;AACAC,QAAAA,MAAM,EAAE,kBADR;AAEAC,QAAAA,aAAa,EAAE,MAAMC,cAAc,CAACC;AAFpC,OANkC;AAUxCY,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AAVkC,KAAd,CAA5B;AAYA,WAAOP,QAAQ,CAACU,IAAT,EAAP;AACD,GAxCqB;AA0CtBK,EAAAA,QAAQ,EAAE,gBAAgBjB,IAAhB,EAAuB;AAC/B,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAACX,IAAI,GAAGQ,IAAR,EAAc;AACxCI,MAAAA,MAAM,EAAE,QADgC;AAExCC,MAAAA,IAAI,EAAE,MAFkC;AAGxCC,MAAAA,OAAO,EAAEb;AAH+B,KAAd,CAA5B;AAKA,WAAOS,QAAQ,CAACU,IAAT,EAAP;AACD;AAjDqB,CAAjB","sourcesContent":["var ROOT = \"https://localhost:44331\";\r\n\r\nconst standartHeaders = {\r\n  Accept: \"application/json\",\r\n  \"Content-Type\": \"application/json\",\r\n  Authorization: \"Bearer \" + sessionStorage.tokenKey,\r\n  \"Access-Control-Allow-Origin\": \"*\"\r\n};\r\n\r\nexport const requests = {\r\n  doPost: async function (path, data) {\r\n    const response = await fetch(ROOT + path, {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers:\r\n        data.values === undefined\r\n          ? standartHeaders\r\n          : {\r\n            Accept: \"application/json\",\r\n            Authorization: \" \" + sessionStorage.tokenKey\r\n          },\r\n      body: JSON.stringify(data)\r\n    });\r\n    return response.json();\r\n  },\r\n\r\n  doGet: async function (path) {\r\n    const response = await fetch(ROOT + path, {\r\n      method: \"GET\",\r\n      mode: \"cors\",\r\n      headers: standartHeaders\r\n    }).then(resp => resp.json());\r\n    return response;\r\n  },\r\n\r\n  doPut: async function (path, body) {\r\n    const response = await fetch(ROOT + path, {\r\n      method: \"PUT\",\r\n      mode: \"cors\",\r\n      headers:\r\n        body.values === undefined\r\n          ? standartHeaders\r\n          : {\r\n            Accept: \"application/json\",\r\n            Authorization: \" \" + sessionStorage.tokenKey\r\n          },\r\n      body: JSON.stringify(body)\r\n    });\r\n    return response.json();\r\n  },\r\n\r\n  doDelete: async function (path,) {\r\n    const response = await fetch(ROOT + path, {\r\n      method: \"DELETE\",\r\n      mode: \"cors\",\r\n      headers: standartHeaders\r\n    });\r\n    return response.json();\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}