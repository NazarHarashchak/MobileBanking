{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nharash\\\\source\\\\repos\\\\FrontEnd\\\\src\\\\MyPage\\\\Accounts\\\\AddAccount.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getTypes, createNewCard, deleteCard } from '../actions';\nimport CardItem from './CardItem';\n\nfunction AddAccount(props) {\n  const [choise, setChoise] = useState(1);\n  const dispatch = useDispatch();\n  const stateData = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch(getTypes());\n  }, []);\n\n  function discard() {\n    debugger;\n    setChoise(0);\n    if (stateData.newCard) dispatch(deleteCard(stateData.newCard.id));\n    props.cancel();\n  }\n\n  function proceed() {\n    let body = {\n      userID: props.id,\n      cardTypeID: choise\n    };\n    dispatch(createNewCard(body));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addAccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"types\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"co-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, \"\\u041E\\u0431\\u0435\\u0440\\u0456\\u0442\\u044C \\u0442\\u0438\\u043F \\u043A\\u0430\\u0440\\u0442\\u043A\\u0438\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    onChange: event => {\n      setChoise(parseInt(event.target.value));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, stateData && stateData.cardTypes ? stateData.cardTypes.cardTypes.map((item, key) => /*#__PURE__*/React.createElement(\"option\", {\n    key: key,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 41\n    }\n  }, item.type)) : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    className: \"btn linkButton\",\n    value: \"\\u041E\\u0431\\u0440\\u0430\\u0442\\u0438\",\n    onClick: () => proceed(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  })))), stateData && stateData.newCard ? /*#__PURE__*/React.createElement(CardItem, {\n    card: stateData.newCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn linkButton\",\n    onClick: () => props.cancel(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"\\u0417\\u0431\\u0435\\u0440\\u0435\\u0433\\u0442\\u0438\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn linkButton\",\n    onClick: () => discard(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"\\u0421\\u043A\\u0430\\u0441\\u0443\\u0432\\u0430\\u0442\\u0438\"))));\n}\n\nexport default AddAccount;","map":{"version":3,"sources":["C:/Users/nharash/source/repos/FrontEnd/src/MyPage/Accounts/AddAccount.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","getTypes","createNewCard","deleteCard","CardItem","AddAccount","props","choise","setChoise","dispatch","stateData","state","user","discard","newCard","id","cancel","proceed","body","userID","cardTypeID","event","parseInt","target","value","cardTypes","map","item","key","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getTypes, createNewCard, deleteCard } from '../actions';\r\nimport CardItem from './CardItem';\r\n\r\nfunction AddAccount(props) {\r\n\r\n    const [choise, setChoise] = useState(1);\r\n\r\n    const dispatch = useDispatch();\r\n    const stateData = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        dispatch(getTypes());\r\n    }, []);\r\n\r\n    function discard() {\r\n        debugger\r\n        setChoise(0);\r\n        if (stateData.newCard)\r\n            dispatch(deleteCard(stateData.newCard.id));\r\n        props.cancel();\r\n    }\r\n\r\n    function proceed() {\r\n        let body = {\r\n            userID: props.id,\r\n            cardTypeID: choise\r\n        }\r\n\r\n        dispatch(createNewCard(body));\r\n    }\r\n\r\n    return (\r\n        <div className=\"addAccount\">\r\n            <div className=\"types\">\r\n                <div className=\"form-group\">\r\n                    <div className=\"co-sm-12\">\r\n                        <h4>\r\n                            Оберіть тип картки\r\n                        </h4>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <select className=\"form-control\" onChange={(event) => { setChoise(parseInt(event.target.value)) }}>\r\n                            {\r\n                                stateData && stateData.cardTypes ?\r\n                                    stateData.cardTypes.cardTypes.map((item, key) =>\r\n                                        <option key={key} value={item.id}>\r\n                                            {item.type}\r\n                                        </option>\r\n                                    )\r\n                                    :\r\n                                    null\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <input type=\"button\" className=\"btn linkButton\" value=\"Обрати\" onClick={() => proceed()} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                stateData && stateData.newCard ?\r\n                    <CardItem card={stateData.newCard} />\r\n                    :\r\n                    null\r\n            }\r\n            <div className=\"buttons\">\r\n                <div className=\"col-sm-12\">\r\n                    <button className=\"btn linkButton\" onClick={() => props.cancel()}>\r\n                        Зберегти\r\n                    </button>\r\n                    <button className=\"btn linkButton\" onClick={() => discard()}>\r\n                        Скасувати\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddAccount;"]},"metadata":{},"sourceType":"module"}