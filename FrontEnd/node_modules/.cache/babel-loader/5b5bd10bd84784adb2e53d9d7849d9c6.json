{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nharash\\\\source\\\\repos\\\\FrontEnd\\\\src\\\\LoginPage\\\\Registration.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registrateUser } from './actions';\n\nfunction Registration(props) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [secondPassword, setSecondpassword] = useState('');\n  const dispatch = useDispatch();\n  const logined = useSelector(state => state.authentificateUser);\n\n  function sendValues() {\n    if (!email && email == \"\") {\n      window.alert(\"Поле емейл не може бути порожнім\");\n      return;\n    }\n\n    if (!password && password == \"\") {\n      window.alert(\"Поле паролю не може бути порожнім\");\n      return;\n    }\n\n    if (!secondPassword && secondPassword == \"\") {\n      window.alert(\"Паролі повинні збігатись\");\n      return;\n    }\n\n    let body = {\n      login: email,\n      password: password\n    };\n    dispatch(registrateUser(body));\n  }\n\n  useEffect(() => {\n    if (logined.result && logined.result !== \"\") {\n      let user = logined.result;\n\n      if (user.success) {\n        let token = {\n          id: user.id,\n          email: user.login,\n          roleID: user.roleID\n        };\n        sessionStorage.setItem(\"BankingUser\", JSON.stringify(token));\n        window.alert(\"Успіх!\");\n        window.location.href = \"/\";\n      } else {\n        window.alert(user.message);\n      }\n    }\n  }, [logined]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"registrationPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"\\u0415\\u043C\\u0435\\u0439\\u043B\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onChange: event => setEmail(event.target.value),\n    reguired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    onChange: event => setPassword(event.target.value),\n    reguired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0456\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    onChange: event => setSecondpassword(event.target.value),\n    reguired: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    onSubmit: sendValues,\n    id: \"registrateBtn\",\n    className: \"btn btn-primary linkButton\",\n    value: \"\\u0417\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u0443\\u0432\\u0430\\u0442\\u0438\\u0441\\u044C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default Registration;","map":{"version":3,"sources":["C:/Users/nharash/source/repos/FrontEnd/src/LoginPage/Registration.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","registrateUser","Registration","props","email","setEmail","password","setPassword","secondPassword","setSecondpassword","dispatch","logined","state","authentificateUser","sendValues","window","alert","body","login","result","user","success","token","id","roleID","sessionStorage","setItem","JSON","stringify","location","href","message","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registrateUser } from './actions';\r\n\r\nfunction Registration(props) {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [secondPassword, setSecondpassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const logined = useSelector(state => state.authentificateUser);\r\n\r\n    function sendValues() {\r\n        if (!email && email == \"\") {\r\n            window.alert(\"Поле емейл не може бути порожнім\");\r\n            return;\r\n        }\r\n        if (!password && password == \"\") {\r\n            window.alert(\"Поле паролю не може бути порожнім\");\r\n            return;\r\n        }\r\n        if (!secondPassword && secondPassword == \"\") {\r\n            window.alert(\"Паролі повинні збігатись\");\r\n            return;\r\n        }\r\n        let body = {\r\n            login: email,\r\n            password: password\r\n        };\r\n        dispatch(registrateUser(body));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (logined.result && logined.result !== \"\") {\r\n            let user = logined.result;\r\n            if (user.success) {\r\n                let token = {\r\n                    id: user.id,\r\n                    email: user.login,\r\n                    roleID: user.roleID\r\n                }\r\n                sessionStorage.setItem(\"BankingUser\", JSON.stringify(token));\r\n                \r\n                window.alert(\"Успіх!\");\r\n                window.location.href = \"/\";\r\n            }\r\n            else {\r\n                window.alert(user.message);\r\n            }\r\n        }\r\n    }, [logined]);\r\n\r\n    return (\r\n        <div className=\"registrationPage\">\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <label>\r\n                        Емейл\r\n                    </label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={(event) => setEmail(event.target.value)} reguired />\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label>\r\n                        Пароль\r\n                    </label>\r\n                    <input type=\"password\" className=\"form-control\" onChange={(event) => setPassword(event.target.value)} reguired />\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label>\r\n                        Повторіть пароль\r\n                    </label>\r\n                    <input type=\"password\" className=\"form-control\" onChange={(event) => setSecondpassword(event.target.value)} reguired />\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <input type=\"button\" onSubmit={sendValues} id=\"registrateBtn\" className=\"btn btn-primary linkButton\" value=\"Зареєструватись\"  />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Registration;"]},"metadata":{},"sourceType":"module"}