{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nharash\\\\source\\\\repos\\\\FrontEnd\\\\src\\\\Worker\\\\Accounts\\\\AllAccounts.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllCards } from '../actions';\n\nfunction AllAccounts(props) {\n  const dispatch = useDispatch();\n  const cards = useSelector(state => state.workerUsers);\n  const [allCards, setCards] = useState(\"\");\n  useEffect(() => {\n    dispatch(getAllCards());\n  }, []);\n  useEffect(() => {\n    if (cards && cards.cards && cards.cards.cards) {\n      setCards(cards.cards.cards);\n    }\n  }, [cards]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"allAccounts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, \"\\u0406\\u043C'\\u044F \\u0432\\u043B\\u0430\\u0441\\u043D\\u0438\\u043A\\u0430\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u0442\\u0432\\u043E\\u0440\\u0435\\u043D\\u043D\\u043D\\u044F\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043A\\u0430\\u0440\\u0442\\u043A\\u0438\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u043D\\u0430\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, allCards.length > 0 ? allCards.map((item, key) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 37\n    }\n  }, item.id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 37\n    }\n  }, item.userFullName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }\n  }, item.cardNumber), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 37\n    }\n  }, item.dateCreated), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  }, item.isActive ? \"Так\" : \"Ні\"))) : null)));\n}\n\nexport default AllAccounts;","map":{"version":3,"sources":["C:/Users/nharash/source/repos/FrontEnd/src/Worker/Accounts/AllAccounts.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","getAllCards","AllAccounts","props","dispatch","cards","state","workerUsers","allCards","setCards","length","map","item","key","id","userFullName","cardNumber","dateCreated","isActive"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAExB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,WAAhB,CAAzB;AACA,QAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBX,QAAQ,CAAC,EAAD,CAArC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ,CAACH,WAAW,EAAZ,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,KAAK,IAAIA,KAAK,CAACA,KAAf,IAAwBA,KAAK,CAACA,KAAN,CAAYA,KAAxC,EAA+C;AAC3CI,MAAAA,QAAQ,CAACJ,KAAK,CAACA,KAAN,CAAYA,KAAb,CAAR;AACH;AACJ,GAJQ,EAIN,CAACA,KAAD,CAJM,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FAPJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAVJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAbJ,CADJ,CADJ,eAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQG,QAAQ,CAACE,MAAT,GAAkB,CAAlB,GACIF,QAAQ,CAACG,GAAT,CAAa,CAACC,IAAD,EAAOC,GAAP,kBACT;AAAI,IAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IAAI,CAACE,EADV,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACG,YADV,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,IAAI,CAACI,UADV,CAPJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,IAAI,CAACK,WADV,CAVJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,IAAI,CAACM,QAAL,GAAgB,KAAhB,GAAwB,IAD7B,CAbJ,CADJ,CADJ,GAqBI,IAvBZ,CApBJ,CADJ,CADJ;AAmDH;;AAED,eAAehB,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllCards } from '../actions';\r\n\r\nfunction AllAccounts(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const cards = useSelector(state => state.workerUsers);\r\n    const [allCards, setCards] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCards());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (cards && cards.cards && cards.cards.cards) {\r\n            setCards(cards.cards.cards);\r\n        }\r\n    }, [cards]);\r\n\r\n    return (\r\n        <div className=\"allAccounts\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <td>\r\n                            ID\r\n                        </td>\r\n                        <td>\r\n                            Ім'я власника\r\n                        </td>\r\n                        <td>\r\n                            Дата створенння\r\n                        </td>\r\n                        <td>\r\n                            Номер картки\r\n                        </td>\r\n                        <td>\r\n                            Активна\r\n                        </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        allCards.length > 0 ?\r\n                            allCards.map((item, key) =>\r\n                                <tr key={key}>\r\n                                    <td>\r\n                                        {item.id}\r\n                                    </td>\r\n                                    <td>\r\n                                        {item.userFullName}\r\n                                    </td>\r\n                                    <td>\r\n                                        {item.cardNumber}\r\n                                    </td>\r\n                                    <td>\r\n                                        {item.dateCreated}\r\n                                    </td>\r\n                                    <td>\r\n                                        {item.isActive ? \"Так\" : \"Ні\"}\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                            :\r\n                            null\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllAccounts;"]},"metadata":{},"sourceType":"module"}