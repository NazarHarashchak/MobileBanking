{"ast":null,"code":"import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { routerReducer, routerMiddleware } from \"react-router-redux\";\nimport * as authentificateReducer from '../Login/reducers';\nexport default function configureStore(history, initialState) {\n  const reducers = {\n    authentificateUser: authentificateReducer.reducer\n  };\n  const middleware = [thunk, routerMiddleware(history)]; // In development, use the browser's Redux dev tools extension if installed\n\n  const enhancers = [];\n  const isDevelopment = process.env.NODE_ENV === \"development\";\n\n  if (isDevelopment && typeof window !== \"undefined\" && window.devToolsExtension) {\n    enhancers.push(window.devToolsExtension());\n  }\n\n  const rootReducer = combineReducers({ ...reducers,\n    routing: routerReducer\n  });\n  const store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware), ...enhancers));\n  return store;\n}","map":{"version":3,"sources":["C:/Users/nharash/source/repos/FrontEnd/src/store/configureStore.jsx"],"names":["applyMiddleware","combineReducers","compose","createStore","thunk","routerReducer","routerMiddleware","authentificateReducer","configureStore","history","initialState","reducers","authentificateUser","reducer","middleware","enhancers","isDevelopment","process","env","NODE_ENV","window","devToolsExtension","push","rootReducer","routing","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,OAA3C,EAAoDC,WAApD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,oBAAhD;AAEA,OAAO,KAAKC,qBAAZ,MAAuC,mBAAvC;AAEA,eAAe,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,YAAjC,EAA+C;AAC5D,QAAMC,QAAQ,GAAG;AACfC,IAAAA,kBAAkB,EAAEL,qBAAqB,CAACM;AAD3B,GAAjB;AAIA,QAAMC,UAAU,GAAG,CAACV,KAAD,EAAQE,gBAAgB,CAACG,OAAD,CAAxB,CAAnB,CAL4D,CAO5D;;AACA,QAAMM,SAAS,GAAG,EAAlB;AACA,QAAMC,aAAa,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA/C;;AACA,MAAIH,aAAa,IAAI,OAAOI,MAAP,KAAkB,WAAnC,IAAkDA,MAAM,CAACC,iBAA7D,EAAgF;AAC9EN,IAAAA,SAAS,CAACO,IAAV,CAAeF,MAAM,CAACC,iBAAP,EAAf;AACD;;AAED,QAAME,WAAW,GAAGtB,eAAe,CAAC,EAClC,GAAGU,QAD+B;AAElCa,IAAAA,OAAO,EAAEnB;AAFyB,GAAD,CAAnC;AAKA,QAAMoB,KAAK,GAAGtB,WAAW,CACvBoB,WADuB,EAEvBb,YAFuB,EAGvBR,OAAO,CACLF,eAAe,CAAC,GAAGc,UAAJ,CADV,EAEL,GAAGC,SAFE,CAHgB,CAAzB;AASA,SAAOU,KAAP;AACD","sourcesContent":["import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { routerReducer, routerMiddleware } from \"react-router-redux\";\r\n\r\nimport * as authentificateReducer from '../Login/reducers';\r\n\r\nexport default function configureStore(history, initialState) {\r\n  const reducers = {\r\n    authentificateUser: authentificateReducer.reducer\r\n  };\r\n\r\n  const middleware = [thunk, routerMiddleware(history)];\r\n\r\n  // In development, use the browser's Redux dev tools extension if installed\r\n  const enhancers = [];\r\n  const isDevelopment = process.env.NODE_ENV === \"development\";\r\n  if (isDevelopment && typeof window !== \"undefined\" && window.devToolsExtension) {\r\n    enhancers.push(window.devToolsExtension());\r\n  }\r\n\r\n  const rootReducer = combineReducers({\r\n    ...reducers,\r\n    routing: routerReducer\r\n  });\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ...enhancers\r\n    )\r\n  );\r\n\r\n  return store;\r\n}"]},"metadata":{},"sourceType":"module"}