{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nharash\\\\source\\\\repos\\\\FrontEnd\\\\src\\\\Worker\\\\Accounts\\\\AllAccounts.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllCards, getAllInactiveCards, activateCard, blockCard } from '../actions';\n\nfunction AllAccounts(props) {\n  const dispatch = useDispatch();\n  const cards = useSelector(state => state.workerUsers);\n  const [allCards, setCards] = useState(\"\");\n  const [showUser, setShowUser] = useState(false);\n  const [showUserID, setShowUserID] = useState(\"\");\n  useEffect(() => {\n    if (props.active) {\n      dispatch(getAllCards());\n    } else {\n      dispatch(getAllInactiveCards());\n    }\n  }, [props.active]);\n  useEffect(() => {\n    if (cards && cards.cards && cards.cards.cards) {\n      setCards(cards.cards.cards);\n    }\n  }, [cards]);\n\n  function blockActivateCard(id, choise) {\n    let body = {\n      id: id\n    };\n\n    if (choise) {\n      dispatch(blockCard(body));\n    } else {\n      dispatch(activateCard(body));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"allAccounts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, showUser ? /*#__PURE__*/React.createElement(AdditionalInformation, {\n    id: showUserID,\n    cancelHandler: () => {\n      setShowUser(false);\n      setShowUserID(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"\\u0406\\u043C'\\u044F \\u0432\\u043B\\u0430\\u0441\\u043D\\u0438\\u043A\\u0430\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"\\u0422\\u0438\\u043F \\u043A\\u0430\\u0440\\u0442\\u043A\\u0438\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u0442\\u0432\\u043E\\u0440\\u0435\\u043D\\u043D\\u043D\\u044F\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u043A\\u0430\\u0440\\u0442\\u043A\\u0438\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u043D\\u0430\"), props.active ? /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, \"\\u0411\\u043B\\u043E\\u043A\\u0443\\u0432\\u0430\\u0442\\u0438\") : /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u0443\\u0432\\u0430\\u0442\\u0438\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, \"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0456\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, allCards.length > 0 ? allCards.map((item, key) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 37\n    }\n  }, item.id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 37\n    }\n  }, item.userFullName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }, item.cardTypeID === 1 ? \"Студентська\" : item.cardTypeID === 2 ? \"Зарплатна\" : item.cardTypeID === 3 ? \"Універсальна\" : item.cardTypeID === 4 ? \"Універсальна Голд\" : null), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 37\n    }\n  }, item.dateCreated), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 37\n    }\n  }, item.cardNumber), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 37\n    }\n  }, item.isActive ? \"Так\" : \"Ні\"), props.active ? /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => blockActivateCard(item.id, true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 49\n    }\n  }, \"\\u0411\\u043B\\u043E\\u043A\\u0443\\u0432\\u0430\\u0442\\u0438\")) : /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => blockActivateCard(item.id, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 49\n    }\n  }, \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u0443\\u0432\\u0430\\u0442\\u0438\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => {\n      setShowUserID(item.userID);\n      setShowUser(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 41\n    }\n  }, \"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0456\")))) : null)));\n}\n\nexport default AllAccounts;","map":{"version":3,"sources":["C:/Users/nharash/source/repos/FrontEnd/src/Worker/Accounts/AllAccounts.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","getAllCards","getAllInactiveCards","activateCard","blockCard","AllAccounts","props","dispatch","cards","state","workerUsers","allCards","setCards","showUser","setShowUser","showUserID","setShowUserID","active","blockActivateCard","id","choise","body","length","map","item","key","userFullName","cardTypeID","dateCreated","cardNumber","isActive","userID"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllCards, getAllInactiveCards, activateCard, blockCard } from '../actions';\r\n\r\nfunction AllAccounts(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const cards = useSelector(state => state.workerUsers);\r\n    const [allCards, setCards] = useState(\"\");\r\n\r\n    const [showUser, setShowUser] = useState(false);\r\n    const [showUserID, setShowUserID] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (props.active) {\r\n            dispatch(getAllCards());\r\n        }\r\n        else {\r\n            dispatch(getAllInactiveCards());\r\n        }\r\n\r\n    }, [props.active]);\r\n\r\n    useEffect(() => {\r\n        if (cards && cards.cards && cards.cards.cards) {\r\n            setCards(cards.cards.cards);\r\n        }\r\n    }, [cards]);\r\n\r\n    function blockActivateCard(id, choise) {\r\n        let body = {\r\n            id: id\r\n        }\r\n        if (choise) {\r\n            dispatch(blockCard(body));\r\n        }\r\n        else {\r\n            dispatch(activateCard(body));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"allAccounts\">\r\n            {\r\n                showUser ?\r\n                    <AdditionalInformation id={showUserID} cancelHandler={() => { setShowUser(false); setShowUserID(\"\"); }} />\r\n                    :\r\n                    null\r\n            }\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <td>\r\n                            ID\r\n                        </td>\r\n                        <td>\r\n                            Ім'я власника\r\n                        </td>\r\n                        <td>\r\n                            Тип картки\r\n                        </td>\r\n                        <td>\r\n                            Дата створенння\r\n                        </td>\r\n                        <td>\r\n                            Номер картки\r\n                        </td>\r\n                        <td>\r\n                            Активна\r\n                        </td>\r\n                        {\r\n                            props.active ?\r\n                                <td>\r\n                                    Блокувати\r\n                                </td>\r\n                                :\r\n                                <td>\r\n                                    Активувати\r\n                                </td>\r\n                        }\r\n                        <td>\r\n                            Деталі\r\n                        </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        allCards.length > 0 ?\r\n                            allCards.map((item, key) =>\r\n                                <tr key={key}>\r\n                                    <td>\r\n                                        {item.id}\r\n                                    </td>\r\n                                    <td>\r\n                                        {item.userFullName}\r\n                                    </td>\r\n                                    <td>\r\n                                        {item.cardTypeID === 1 ?\r\n                                            \"Студентська\"\r\n                                            :\r\n                                            item.cardTypeID === 2 ?\r\n                                                \"Зарплатна\"\r\n                                                :\r\n                                                item.cardTypeID === 3 ?\r\n                                                    \"Універсальна\"\r\n                                                    :\r\n                                                    item.cardTypeID === 4 ?\r\n                                                        \"Універсальна Голд\"\r\n                                                        :\r\n                                                        null}\r\n                                    </td>\r\n                                    <td>\r\n                                        {item.dateCreated}\r\n                                    </td>\r\n                                    <td>\r\n                                        {item.cardNumber}\r\n                                    </td>\r\n                                    <td>\r\n                                        {item.isActive ? \"Так\" : \"Ні\"}\r\n                                    </td>\r\n                                    {\r\n                                        props.active ?\r\n                                            <td>\r\n                                                <a onClick={() => blockActivateCard(item.id, true)}>\r\n                                                    Блокувати\r\n                                                </a>\r\n                                            </td>\r\n                                            :\r\n                                            <td>\r\n                                                <a onClick={() => blockActivateCard(item.id, false)}>\r\n                                                    Активувати\r\n                                                </a>\r\n                                            </td>\r\n                                    }\r\n                                    <td>\r\n                                        <a onClick={() => { setShowUserID(item.userID); setShowUser(true); }}>\r\n                                            Деталі\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                            :\r\n                            null\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllAccounts;"]},"metadata":{},"sourceType":"module"}